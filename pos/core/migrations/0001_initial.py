# Generated by Django 5.1.6 on 2025-02-10 10:27

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Agent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('commission_rate', models.DecimalField(decimal_places=2, max_digits=5)),
            ],
        ),
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contact_id', models.CharField(max_length=100)),
                ('business_name', models.CharField(max_length=200)),
                ('name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('pay_term', models.CharField(max_length=50)),
                ('opening_balance', models.DecimalField(decimal_places=2, max_digits=10)),
                ('advance_balance', models.DecimalField(decimal_places=2, max_digits=10)),
                ('credit_limit', models.DecimalField(decimal_places=2, max_digits=10)),
                ('date', models.DateField()),
                ('mobile', models.CharField(max_length=20)),
                ('total_sales_due', models.DecimalField(decimal_places=2, max_digits=10)),
                ('total_sales_return_due', models.DecimalField(decimal_places=2, max_digits=10)),
            ],
        ),
        migrations.CreateModel(
            name='Expense',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('reference_no', models.CharField(max_length=100)),
                ('customer_name', models.CharField(max_length=255)),
                ('recurring_details', models.TextField()),
                ('expense_category', models.CharField(max_length=255)),
                ('sub_category', models.CharField(max_length=255)),
                ('location', models.CharField(max_length=255)),
                ('payment_status', models.CharField(max_length=50)),
                ('tax', models.DecimalField(decimal_places=2, max_digits=10)),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('payment_due', models.DecimalField(decimal_places=2, max_digits=10)),
                ('expense_for', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='ExpenseCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_name', models.CharField(max_length=255)),
                ('category_code', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Metrics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('out_of_stock_products', models.IntegerField(default=0)),
                ('number_of_customers', models.IntegerField(default=0)),
                ('monthly_sales', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('weekly_sales', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('daily_sales', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
            ],
        ),
        migrations.CreateModel(
            name='MonthlySales',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('month', models.CharField(max_length=20)),
                ('sales', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='ProductCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Purchase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('reference_no', models.CharField(max_length=100)),
                ('location', models.CharField(max_length=200)),
                ('supplier', models.CharField(max_length=200)),
                ('purchase_status', models.CharField(choices=[('Pending', 'Pending'), ('Completed', 'Completed')], max_length=100)),
                ('payment_status', models.CharField(choices=[('Unpaid', 'Unpaid'), ('Paid', 'Paid')], max_length=100)),
                ('grand_total', models.DecimalField(decimal_places=2, max_digits=10)),
                ('payment_due', models.DecimalField(decimal_places=2, max_digits=10)),
                ('total', models.DecimalField(decimal_places=2, max_digits=10)),
            ],
        ),
        migrations.CreateModel(
            name='PurchaseReturn',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('reference_no', models.CharField(max_length=100, unique=True)),
                ('parent_purchase', models.CharField(blank=True, max_length=100, null=True)),
                ('location', models.CharField(max_length=255)),
                ('supplier', models.CharField(max_length=255)),
                ('payment_status', models.CharField(choices=[('Unpaid', 'Unpaid'), ('Paid', 'Paid'), ('Partial', 'Partial')], default='Unpaid', max_length=50)),
                ('grand_total', models.DecimalField(decimal_places=2, max_digits=10)),
                ('payment_due', models.DecimalField(decimal_places=2, max_digits=10)),
                ('total', models.DecimalField(decimal_places=2, max_digits=10)),
            ],
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='SalesReturn',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('invoice_no', models.CharField(max_length=100)),
                ('parent_sale', models.CharField(max_length=100)),
                ('customer_name', models.CharField(max_length=255)),
                ('location', models.CharField(max_length=255)),
                ('payment_status', models.CharField(max_length=50)),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('payment_due', models.DecimalField(decimal_places=2, max_digits=10)),
            ],
        ),
        migrations.CreateModel(
            name='Staff',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('position', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Stock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sku', models.CharField(max_length=100)),
                ('product', models.CharField(max_length=255)),
                ('variation', models.CharField(max_length=100)),
                ('category', models.CharField(max_length=100)),
                ('location', models.CharField(max_length=100)),
                ('unit_selling_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('current_stock', models.IntegerField()),
                ('current_stock_value_purchase_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('current_stock_value_sale_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('potential_profit', models.DecimalField(decimal_places=2, max_digits=10)),
                ('total_units_sold', models.IntegerField()),
                ('total_units_transferred', models.IntegerField()),
                ('total_units_adjusted', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='StorageLocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contact_id', models.CharField(max_length=100)),
                ('business_name', models.CharField(max_length=200)),
                ('name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('tax_number', models.CharField(max_length=100)),
                ('pay_term', models.CharField(max_length=50)),
                ('opening_balance', models.DecimalField(decimal_places=2, max_digits=10)),
                ('advance_balance', models.DecimalField(decimal_places=2, max_digits=10)),
                ('date', models.DateField()),
                ('address', models.CharField(max_length=255)),
                ('mobile', models.CharField(max_length=20)),
                ('total_purchase_due', models.DecimalField(decimal_places=2, max_digits=10)),
            ],
        ),
        migrations.CreateModel(
            name='Unit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('symbol', models.CharField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('Admin', 'Admin'), ('Cashier', 'Cashier'), ('Manager', 'Manager'), ('Inventory', 'Inventory'), ('Accountant', 'Accountant')], max_length=50)),
                ('is_active', models.BooleanField(default=True)),
                ('last_login_ip', models.GenericIPAddressField(blank=True, null=True)),
                ('failed_login_attempts', models.IntegerField(default=0)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to.', related_name='custom_user_set', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='custom_user_set', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'permissions': [('can_view_reports', 'Can view reports'), ('can_manage_inventory', 'Can manage inventory'), ('can_process_returns', 'Can process returns'), ('can_void_transactions', 'Can void transactions'), ('can_modify_prices', 'Can modify prices')],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='CustomerCredit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('credit_limit', models.DecimalField(decimal_places=2, max_digits=10)),
                ('current_balance', models.DecimalField(decimal_places=2, max_digits=10)),
                ('last_payment_date', models.DateField(blank=True, null=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.customer')),
            ],
        ),
        migrations.CreateModel(
            name='CreditPayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('payment_date', models.DateTimeField(auto_now_add=True)),
                ('reference_number', models.CharField(max_length=50)),
                ('received_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('customer_credit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.customercredit')),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('barcode', models.CharField(max_length=100, unique=True)),
                ('sku', models.CharField(max_length=100, unique=True)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('cost_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('tax_rate', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('reorder_point', models.IntegerField(default=10)),
                ('is_active', models.BooleanField(default=True)),
                ('stock_quantity', models.IntegerField()),
                ('packing_date', models.DateField()),
                ('brand', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.brand')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.productcategory')),
                ('unit', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.unit')),
            ],
        ),
        migrations.CreateModel(
            name='Discount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('from_date', models.DateField()),
                ('to_date', models.DateField()),
                ('discount_type', models.CharField(choices=[('Product wise discount', 'Product wise discount'), ('Total price discount', 'Total price discount')], max_length=255)),
                ('all_products_discount', models.BooleanField(default=False)),
                ('quantity_based_discount', models.BooleanField(default=False)),
                ('quantity', models.PositiveIntegerField(blank=True, null=True)),
                ('total_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('discount_percent', models.DecimalField(decimal_places=2, max_digits=5)),
                ('products', models.ManyToManyField(blank=True, related_name='discounts', to='core.product')),
            ],
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report_type', models.CharField(choices=[('SALES', 'Sales Report'), ('INVENTORY', 'Inventory Report'), ('CREDIT', 'Credit Report'), ('PROFIT', 'Profit Report'), ('TAX', 'Tax Report')], max_length=20)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('generated_at', models.DateTimeField(auto_now_add=True)),
                ('parameters', models.JSONField()),
                ('results', models.JSONField()),
                ('file_path', models.FileField(blank=True, null=True, upload_to='reports/')),
                ('generated_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ReportSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report_type', models.CharField(choices=[('SALES', 'Sales Report'), ('INVENTORY', 'Inventory Report'), ('CREDIT', 'Credit Report'), ('PROFIT', 'Profit Report'), ('TAX', 'Tax Report')], max_length=20)),
                ('frequency', models.CharField(choices=[('DAILY', 'Daily'), ('WEEKLY', 'Weekly'), ('MONTHLY', 'Monthly')], max_length=10)),
                ('is_active', models.BooleanField(default=True)),
                ('last_run', models.DateTimeField(blank=True, null=True)),
                ('next_run', models.DateTimeField()),
                ('recipients', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SalesOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('order_no', models.CharField(max_length=100)),
                ('location', models.CharField(max_length=255)),
                ('status', models.CharField(choices=[('Draft', 'Draft'), ('Quotation', 'Quotation'), ('Completed', 'Completed')], max_length=50)),
                ('shipping_status', models.CharField(max_length=50)),
                ('quantity_remaining', models.IntegerField()),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('agent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.agent')),
                ('customer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.customer')),
                ('staff', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.staff')),
            ],
        ),
        migrations.CreateModel(
            name='InventoryMovement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('movement_type', models.CharField(choices=[('IN', 'Stock In'), ('OUT', 'Stock Out'), ('TRANSFER', 'Transfer'), ('ADJUST', 'Adjustment'), ('RETURN', 'Return')], max_length=10)),
                ('quantity', models.IntegerField()),
                ('reference_number', models.CharField(max_length=50)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('performed_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.product')),
                ('from_location', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='from_movements', to='core.storagelocation')),
                ('to_location', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='to_movements', to='core.storagelocation')),
            ],
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_id', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('payment_method', models.CharField(choices=[('CASH', 'Cash'), ('CARD', 'Card'), ('MOBILE', 'Mobile Money'), ('CREDIT', 'Store Credit')], max_length=20)),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('paid_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('change_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('is_completed', models.BooleanField(default=False)),
                ('cashier', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.customer')),
            ],
        ),
        migrations.CreateModel(
            name='Receipt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('receipt_number', models.CharField(max_length=50, unique=True)),
                ('printed_count', models.IntegerField(default=0)),
                ('last_printed', models.DateTimeField(blank=True, null=True)),
                ('void_status', models.BooleanField(default=False)),
                ('void_reason', models.TextField(blank=True, null=True)),
                ('transaction', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='core.transaction')),
            ],
        ),
        migrations.CreateModel(
            name='UserActivity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activity_type', models.CharField(max_length=100)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('details', models.TextField()),
                ('ip_address', models.GenericIPAddressField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'User Activities',
            },
        ),
        migrations.CreateModel(
            name='InventoryItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('batch_number', models.CharField(max_length=50)),
                ('quantity', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('expiry_date', models.DateField(blank=True, null=True)),
                ('last_counted', models.DateTimeField(blank=True, null=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.product')),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.storagelocation')),
            ],
            options={
                'unique_together': {('product', 'batch_number')},
            },
        ),
    ]
